-- üêæ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
_G.TargetNames = {
    "Dragonfly",
    "Red Fox",
    "Queen Bee",
    "Disco Bee",
    "Butterfly",
    "Raccoon",
} 


-----------‡∏≠‡∏¢‡πà‡∏≤‡πÑ‡∏õ‡∏¢‡∏∏‡πà‡∏á-----------
_G.webhookUrl = "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö"


local notified = false


local function sendWebhook(url, message, playerName)
    if notified then return end -- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ã‡πâ‡∏≥

    local data = {
        ["content"] = "**üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:** `" .. playerName .. "`\n" .. message
    }

    local httpService = game:GetService("HttpService")
    local jsonData = httpService:JSONEncode(data)

    local headers = {
        ["Content-Type"] = "application/json"
    }

    local requestFunction = http_request or request or HttpPost or syn.request or http
    if requestFunction then
        requestFunction({
            Url = url,
            Method = "POST",
            Headers = headers,
            Body = jsonData
        })
    else
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö request function ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á webhook")
    end

    notified = true
end


local function isTargetPet(petName)
    for _, target in ipairs(_G.TargetNames) do
        if petName == target then
            return true
        end
    end
    return false
end


local lastNotificationTime = 0
local function showNotification(message)
    local player = game:GetService("Players").LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local existingGui = playerGui:FindFirstChild("KiraHubNotification")
    if existingGui then
        existingGui:Destroy()
    end

    local gui = Instance.new("ScreenGui")
    gui.Name = "KiraHubNotification"
    gui.ResetOnSpawn = false
    gui.Parent = playerGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.6, 0, 0.1, 0)
    label.Position = UDim2.new(0.2, 0, 0.05, 0)
    label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.Text = "üîî Kira Hub: " .. message
    label.Parent = gui

    local thisNotificationTime = tick()
    lastNotificationTime = thisNotificationTime

    task.delay(5, function()
        if lastNotificationTime == thisNotificationTime then
            gui:Destroy()
        end
    end)
end


local function addTextToEgg(eggModel, petName)
    if eggModel and eggModel:IsA("Model") then
        local existing = eggModel:FindFirstChild("PetNameTag")
        if existing then existing:Destroy() end

        local tag = Instance.new("BillboardGui")
        tag.Name = "PetNameTag"
        tag.Size = UDim2.new(0, 200, 0, 50)
        tag.StudsOffset = Vector3.new(0, 3, 0)
        tag.AlwaysOnTop = true
        tag.Parent = eggModel

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "üéØ " .. petName
        textLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.GothamBold
        textLabel.Parent = tag
    end
end


local DataSer = require(game:GetService("ReplicatedStorage").Modules.DataService)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")

while true do
    wait()

    local foundTargetName = nil
    local otherPetName = nil
    local foundEgg = nil
    local playerName = LocalPlayer.Name

    for _, egg in pairs(DataSer:GetData().SavedObjects) do
        if egg.ObjectType == "PetEgg" then
            local petData = egg.Data.RandomPetData

            if petData then
                local petName = tostring(petData.Name)
                if egg.Data.CanHatch then
                    if isTargetPet(petName) then
                        foundTargetName = petName
                        foundEgg = egg.Instance -- ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ egg.Instance ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡πÑ‡∏õ‡∏¢‡∏±‡∏á Model
                        break
                    else
                        otherPetName = petName
                    end
                end
            end
        end
    end

    if foundTargetName then
        print("‚úÖ ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß: " .. foundTargetName)
        showNotification("‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (" .. foundTargetName .. ")")
        sendWebhook(_G.webhookUrl, "‚úÖ ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß: **" .. foundTargetName .. "**", playerName)

        if foundEgg then
            addTextToEgg(foundEgg, foundTargetName)
        end
    elseif otherPetName and not notified then
        warn("‚ùå ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: " .. otherPetName)
        showNotification("‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (" .. otherPetName .. ")")
        sendWebhook(_G.webhookUrl, "‚ùå ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏û‡∏ö: **" .. otherPetName .. "**\n‚è≥ ‡∏£‡∏µ‡∏à‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ï‡πà‡∏≠...", playerName)
   -- üêæ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
_G.TargetNames = {
    "Dragonfly",
    "Red Fox",
    "Queen Bee",
    "Disco Bee",
    "Butterfly",
    "Raccoon",
} 


-----------‡∏≠‡∏¢‡πà‡∏≤‡πÑ‡∏õ‡∏¢‡∏∏‡πà‡∏á-----------
_G.webhookUrl = "‡πÉ‡∏™‡πà‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö"


local notified = false


local function sendWebhook(url, message, playerName)
    if notified then return end -- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ã‡πâ‡∏≥

    local data = {
        ["content"] = "**üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:** `" .. playerName .. "`\n" .. message
    }

    local httpService = game:GetService("HttpService")
    local jsonData = httpService:JSONEncode(data)

    local headers = {
        ["Content-Type"] = "application/json"
    }

    local requestFunction = http_request or request or HttpPost or syn.request or http
    if requestFunction then
        requestFunction({
            Url = url,
            Method = "POST",
            Headers = headers,
            Body = jsonData
        })
    else
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö request function ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á webhook")
    end

    notified = true
end


local function isTargetPet(petName)
    for _, target in ipairs(_G.TargetNames) do
        if petName == target then
            return true
        end
    end
    return false
end


local lastNotificationTime = 0
local function showNotification(message)
    local player = game:GetService("Players").LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local existingGui = playerGui:FindFirstChild("KiraHubNotification")
    if existingGui then
        existingGui:Destroy()
    end

    local gui = Instance.new("ScreenGui")
    gui.Name = "KiraHubNotification"
    gui.ResetOnSpawn = false
    gui.Parent = playerGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.6, 0, 0.1, 0)
    label.Position = UDim2.new(0.2, 0, 0.05, 0)
    label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.Text = "üîî Kira Hub: " .. message
    label.Parent = gui

    local thisNotificationTime = tick()
    lastNotificationTime = thisNotificationTime

    task.delay(5, function()
        if lastNotificationTime == thisNotificationTime then
            gui:Destroy()
        end
    end)
end


local function addTextToEgg(eggModel, petName)
    if eggModel and eggModel:IsA("Model") then
        local existing = eggModel:FindFirstChild("PetNameTag")
        if existing then existing:Destroy() end

        local tag = Instance.new("BillboardGui")
        tag.Name = "PetNameTag"
        tag.Size = UDim2.new(0, 200, 0, 50)
        tag.StudsOffset = Vector3.new(0, 3, 0)
        tag.AlwaysOnTop = true
        tag.Parent = eggModel

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "üéØ " .. petName
        textLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.GothamBold
        textLabel.Parent = tag
    end
end


local DataSer = require(game:GetService("ReplicatedStorage").Modules.DataService)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")

while true do
    wait()

    local foundTargetName = nil
    local otherPetName = nil
    local foundEgg = nil
    local playerName = LocalPlayer.Name

    for _, egg in pairs(DataSer:GetData().SavedObjects) do
        if egg.ObjectType == "PetEgg" then
            local petData = egg.Data.RandomPetData

            if petData then
                local petName = tostring(petData.Name)
                if egg.Data.CanHatch then
                    if isTargetPet(petName) then
                        foundTargetName = petName
                        foundEgg = egg.Instance -- ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ egg.Instance ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡πÑ‡∏õ‡∏¢‡∏±‡∏á Model
                        break
                    else
                        otherPetName = petName
                    end
                end
            end
        end
    end

    if foundTargetName then
        print("‚úÖ ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß: " .. foundTargetName)
        showNotification("‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (" .. foundTargetName .. ")")
        sendWebhook(_G.webhookUrl, "‚úÖ ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß: **" .. foundTargetName .. "**", playerName)

        if foundEgg then
            addTextToEgg(foundEgg, foundTargetName)
        end
    elseif otherPetName and not notified then
        warn("‚ùå ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: " .. otherPetName)
        showNotification("‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (" .. otherPetName .. ")")
        sendWebhook(_G.webhookUrl, "‚ùå ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏û‡∏ö: **" .. otherPetName .. "**\n‚è≥ ‡∏£‡∏µ‡∏à‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ï‡πà‡∏≠...", playerName)
        wait(3)
        LocalPlayer:Kick("Don't have your target pet\nRejoining...")
        task.wait(1)
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
end
--beykira001x     wait(3)
        LocalPlayer:Kick("Don't have your target pet\nRejoining...")
        task.wait(1)
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
end
--beykira001x
